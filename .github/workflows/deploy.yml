name: Build and Deploy Jekyll via rsync

on:
  schedule:
    - cron: '0 * * * *'
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ secrets.PHP_VERSION }}

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ secrets.RUBY_VERSION }}
          bundler-cache: false

      - name: Cache Ruby gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          gem install bundler
          bundle config set path 'vendor/bundle'
          bundle install --jobs 4 --retry 3

          if [ -f composer.json ]; then
            composer install --no-interaction --prefer-dist --optimize-autoloader
          fi

      - name: Build Jekyll site
        run: bundle exec jekyll build
        env:
          JEKYLL_ENV: production
          DISCOGS_USERNAME: ${{ secrets.DISCOGS_USERNAME }}
          DISCOGS_TOKEN: ${{ secrets.DISCOGS_TOKEN }}

      - name: Setup SSH key
        run: |
          set -e
          mkdir -p ~/.ssh
          echo "${{ secrets.RSYNC_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.RSYNC_SSH_PORT }} -H ${{ secrets.RSYNC_HOST }} >> ~/.ssh/known_hosts

      - name: Create rsync exclude file
        run: echo "${{ secrets.RSYNC_EXCLUDES }}" > rsync-exclude.txt

      - name: Generate .rsync-filter from server and secrets
        run: |
          ssh -p ${{ secrets.RSYNC_SSH_PORT }} ${{ secrets.RSYNC_USER }}@${{ secrets.RSYNC_HOST }} "find '${{ secrets.RSYNC_DEST_PATH }}' -type f -name '.cicd-pipeline-exclude' -exec dirname {} \;" | sed "s|^${{ secrets.RSYNC_DEST_PATH }}|-/|" > .rsync-filter
          echo "${{ secrets.RSYNC_EXCLUDES }}" >> .rsync-filter

      - name: Deploy via rsync
        run: |
          rsync -avz -e "ssh -p ${{ secrets.RSYNC_SSH_PORT }}" --delete --filter="merge .rsync-filter" _site/ ${{ secrets.RSYNC_USER }}@${{ secrets.RSYNC_HOST }}:${{ secrets.RSYNC_DEST_PATH }}
