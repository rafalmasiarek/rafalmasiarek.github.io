document.addEventListener("DOMContentLoaded", () => { const e = document.getElementById("contact-form"), t = document.getElementById("contact-form-alert"), n = document.getElementById("contact-form-btn"), c = document.getElementById("csrf_token"); if (!e || !t || !n || !c) return; const o = document.getElementById("g-recaptcha-sitekey"), a = (null == o ? void 0 : o.value) || e.dataset.recaptchaSitekey || ""; fetch("/api/csrf/generate").then(e => e.json()).then(e => { "success" === e.status && e.data.csrf_token && (c.value = e.data.csrf_token) }).catch(e => console.error("CSRF token fetch error:", e)); async function s() { try { const e = await fetch("/api/csrf/regenerate"), t = await e.json(); "success" === t.status && t.data.csrf_token && (c.value = t.data.csrf_token, console.log("CSRF token regenerated and updated.")) } catch (e) { console.error("CSRF token regeneration error:", e) } } setInterval(async () => { try { const e = await fetch("/api/csrf/token-expiry"), t = await e.json(); "success" === t.status && "number" == typeof t.data.ttl && t.data.ttl < 30 && await s() } catch (e) { console.error("CSRF token expiry check error:", e) } }, 1e4), e.addEventListener("submit", async o => { o.preventDefault(); try { n.classList.remove("btn-enable-on-input"), n.classList.add("btn-disable-on-input"), n.disabled = !0, n.innerHTML = '<i class="fas fa-spinner fa-spin"></i> &nbsp; Sending...'; const o = new FormData(e); if (a) { await (async (e = 5e3) => { const t = Date.now(); for (; !(window.grecaptcha && "function" == typeof grecaptcha.ready);) { if (Date.now() - t > e) throw new Error("grecaptcha not loaded"); await new Promise(e => setTimeout(e, 50)) } })(), await new Promise(e => grecaptcha.ready(e)); const t = await grecaptcha.execute(a, { action: "contactform" }); o.set("g-recaptcha-response", t) } const c = await fetch("/api/contactform/send", { method: "POST", body: o }), s = await c.json(); t.classList.remove("alert-green", "alert-red"), t.textContent = s.message || "Unexpected response.", t.classList.add("success" === s.status ? "alert-green" : "alert-red"), t.style.display = "block", "success" === s.status && e.reset() } catch (e) { console.error("Contact form error:", e), t.classList.remove("alert-green"), t.classList.add("alert-red"), t.textContent = "‚ùå Unexpected error occurred.", t.style.display = "block" } finally { n.classList.remove("btn-disable-on-input"), n.classList.add("btn-enable-on-input"), n.disabled = !1, n.innerHTML = '<i class="fas fa-paper-plane"></i> &nbsp; Send Email' } }) });